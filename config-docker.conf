# DO NOT EDIT THIS FILE
#
# This is a Docker launcher file. To set up the configuration, use command line arguments to compile.sh
# or create a config file named "config-docker-guest.conf" based on config-example.conf

[[ ! -c /dev/loop-control ]] && display_alert "/dev/loop-control does not exist, image building may not work" "" "wrn"

# remove "docker" from the command line since "docker-guest" will be passed instead
shift

# build a new container based on provided Dockerfile
docker build -t armbian .

DOCKER_FLAGS=()

# Running this container in privileged mode is a simple way to solve loop device access issues
#DOCKER_FLAGS+=(--privileged)

# add only required capabilities instead (though MKNOD should be already present)
DOCKER_FLAGS+=(--cap-add=SYS_ADMIN --cap-add=MKNOD)

# mounting things inside the container on Ubuntu won't work without this
# https://github.com/moby/moby/issues/16429#issuecomment-217126586
DOCKER_FLAGS+=(--security-opt=apparmor:unconfined)

# remove resulting container after exit
DOCKER_FLAGS+=(--rm)

# pass through loop devices
for d in /dev/loop*; do
	DOCKER_FLAGS+=(--device=$d)
done

# accessing dynamically created devices won't work by default
# and --device doesn't accept devices that don't exist at the time "docker run" is executed
# https://github.com/moby/moby/issues/27886
# --device-cgroup-rule requires new Docker version

# allow loop devices (not required)
DOCKER_FLAGS+=(--device-cgroup-rule='b 7:* rmw')
# allow loop device partitions
DOCKER_FLAGS+=(--device-cgroup-rule='b 259:* rmw')

# mount 2 named volumes - for cacheable data and compiler cache
DOCKER_FLAGS+=(-v=armbian-cache:/root/armbian/cache -v=armbian-ccache:/root/.ccache)

# mount 2 local directories - output and userpatches
DOCKER_FLAGS+=(-v=$SRC/output:/root/armbian/output -v=$SRC/userpatches:/root/armbian/userpatches)

# pass other command line arguments like KERNEL_ONLY=yes, KERNEL_CONFIGURE=yes, etc.
# pass "docker-guest" as an additional config name that will be sourced in the container if exists
docker run "${DOCKER_FLAGS[@]}" -it armbian docker-guest "$@"

STATUS=$?

if [[ $STATUS -eq 125 ]]; then
	display_alert "Docker error 125, please make sure you are using the latest version (17.06 CE or newer)"
fi

if [[ $STATUS -eq 126 || $STATUS -eq 127 ]]; then
	display_alert "Docker error $STATUS, please check the Armbian documentation for the Docker setup procedure"
fi

# don't need to proceed further on the host
exit 0
